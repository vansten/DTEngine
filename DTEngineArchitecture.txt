ENGINE architecture/function order/lifetime cycle:
One unique singleton - the App! Graphics, Window, ResourceManager, Time, Game, Input and (probably) Physics will be get by Get*() global function which in fact is App::GetInstance()->Get*() inlined call!

App::Initialize()
	Game::Initialize()	//Editor::Initialize()
		Scene::Load(sceneName)
			Scene::Unload()
			new Entity
			Entity::Load(someArchive)
				new Component
				Component::Load(someArchive)
			Entity::Initialize()	// References should be used carefully (referenced entities/components may not be properly initialized on this step)
				Component::OnInitialize()	// References should be used carefully (referenced entities/components may not be properly initialized on this step)
App::Loop()
	Game::Update(dt)	//Editor::Update(dt) (maybe some flag in Entity bUpdatesWithEditor)
		Scene::Update(dt)
			Entity::Update(dt)
				Component::Update(dt)	
	Game::Render()		//Editor::Render()
		Scene::Render()
			Entity::Render()
				Component::Render()

App::Shutdown()
	Game::Shutdown()	//Editor::Shutdown()
		Scene::Unload()
			Entity::Shutdown()
				Component::OnShutdown()
			delete Entity;
				delete Component;

Scene::Save()
	Entity::Save(someArchive)
		Component::Save(someArchive)

Entity::SetEnabled(enabled)
	if(enabled)	Component::OnOwnerEnabled()
	else Component::OnOwnerDisabled()

Transform::CalculateMatrix()
	Entity::OnTransformUpdated()
		Component::OnOwnerTransformUpdated()
	for each children of the Transform
		Transform::CalculateMatrix()

Entity::IsEnabledInHierarchy()
	return IsEnabled() && transform.parent.owner.IsEnabledInHierarchy();